/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFrame;

/**
 *
 * @author Ferran
 */
public class LoadForm extends javax.swing.JFrame {

    
    private static LoadForm lf;
    private static EditorForm ef;
    private static String luaSPath;
    private static String imgPath;
    private static int height;
    private static int width;
    
    /**
     * Creates new form loadForm
     */
    public LoadForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        imageFileSelector = new javax.swing.JButton();
        luaFileSelector = new javax.swing.JButton();
        imagePath = new javax.swing.JTextField();
        luaPath = new javax.swing.JTextField();
        tileSetLable = new javax.swing.JLabel();
        luaScriptLable = new javax.swing.JLabel();
        tileSizeLable = new javax.swing.JLabel();
        xLable = new javax.swing.JLabel();
        nextButton = new javax.swing.JButton();
        tileHeight = new javax.swing.JTextField();
        tileWidth = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setFont(new java.awt.Font("Tahoma", 0, 80)); // NOI18N
        title.setText("Tedi");

        imageFileSelector.setText("...");
        imageFileSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageFileSelectorActionPerformed(evt);
            }
        });

        luaFileSelector.setText("...");
        luaFileSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                luaFileSelectorActionPerformed(evt);
            }
        });

        imagePath.setText("...");
        imagePath.setFocusable(false);
        imagePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imagePathActionPerformed(evt);
            }
        });

        luaPath.setText("...");
        luaPath.setFocusable(false);
        luaPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                luaPathActionPerformed(evt);
            }
        });

        tileSetLable.setText("TILE SET PATH");

        luaScriptLable.setText("LUA SCRIPT PATH");

        tileSizeLable.setText("TILE SIZE:");

        xLable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        xLable.setText("X");

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        tileHeight.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tileHeight.setText("32");
        tileHeight.setToolTipText("HEIGHT");
        tileHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tileHeightActionPerformed(evt);
            }
        });

        tileWidth.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tileWidth.setText("32");
        tileWidth.setToolTipText("WIDTH");
        tileWidth.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        tileWidth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tileWidthActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(325, 325, 325)
                .addComponent(title)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(luaScriptLable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tileSetLable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(imagePath)
                                .addGap(18, 18, 18)
                                .addComponent(imageFileSelector))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(luaPath, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(luaFileSelector))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(tileSizeLable, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tileHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(xLable, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tileWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(291, 291, 291)
                        .addComponent(nextButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(73, 73, 73))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(title)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imageFileSelector)
                    .addComponent(tileSetLable)
                    .addComponent(imagePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(luaPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(luaFileSelector)
                    .addComponent(luaScriptLable))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tileHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tileSizeLable)
                        .addComponent(xLable, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tileWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(nextButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        tileHeight.getAccessibleContext().setAccessibleName("HEIGHT");
        tileHeight.getAccessibleContext().setAccessibleDescription("HEIGHT");
        tileWidth.getAccessibleContext().setAccessibleName("WIDTH");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void imageFileSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageFileSelectorActionPerformed
        selectFile(0);
    }//GEN-LAST:event_imageFileSelectorActionPerformed

    private void luaFileSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_luaFileSelectorActionPerformed
        selectFile(1);
    }//GEN-LAST:event_luaFileSelectorActionPerformed

    private void imagePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imagePathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imagePathActionPerformed

    private void luaPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_luaPathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_luaPathActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        // anar a la seguent pantalla (edició)
        ef = EditorForm.getInstance();
        height = Integer.parseInt(tileHeight.getText());
        width = Integer.parseInt(tileWidth.getText());
        ef.initPresentation(luaSPath,imgPath,height,width);
        lf.setVisible(false);
    }//GEN-LAST:event_nextButtonActionPerformed

    private void tileWidthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tileWidthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tileWidthActionPerformed

    private void tileHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tileHeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tileHeightActionPerformed

   
    public static LoadForm getInstance(){
        if (lf == null) {
            lf = new LoadForm();
            lf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        }
        return lf;
    }
    
    public void selectFile(int button) {
        JFileChooser chooser = new JFileChooser();
        // optionally set chooser options ...
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File f = chooser.getSelectedFile();
            String path = f.getPath();
            if(button == 0){
                imgPath = path;
                imagePath.setText(path);
            }
            else if (button == 1){
                luaSPath = path;
                luaPath.setText(path);
            }
            // read  and/or display the file somehow. ....
        } else {
            // user changed their mind
        }
    }
    
    public void initPresentation() {
        lf.setVisible(true);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton imageFileSelector;
    private javax.swing.JTextField imagePath;
    private javax.swing.JButton luaFileSelector;
    private javax.swing.JTextField luaPath;
    private javax.swing.JLabel luaScriptLable;
    private javax.swing.JButton nextButton;
    private javax.swing.JTextField tileHeight;
    private javax.swing.JLabel tileSetLable;
    private javax.swing.JLabel tileSizeLable;
    private javax.swing.JTextField tileWidth;
    private javax.swing.JLabel title;
    private javax.swing.JLabel xLable;
    // End of variables declaration//GEN-END:variables
}
