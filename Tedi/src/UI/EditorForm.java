/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Rectangle;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.border.Border;
import javax.swing.border.MatteBorder;

/**
 *
 * @author Ferran
 */
public class EditorForm extends javax.swing.JFrame {

    private static EditorForm ef;
    private static String luaPath;
    private static String imagePath = "F://Ferran/SLDS/NewRPG/windows/MVS/ScriptRPG/assets/images/tileset.png";
    private static GridPane grid;
    private static Rectangle bounds;
    private static int width;
    private static int height;
    
    /**
     * Creates new form EditorForm
     */
    public EditorForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        saveExitButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        imageLabel = new javax.swing.JLabel();
        tilePropertiesPane = new javax.swing.JPanel();
        idLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        sizeTileLabel = new javax.swing.JLabel();
        colliderLabel = new javax.swing.JLabel();
        animationLabel = new javax.swing.JLabel();
        heightLabel = new javax.swing.JLabel();
        widthLabel = new javax.swing.JLabel();
        inputCLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSeparator1.setBackground(new java.awt.Color(70, 70, 70));
        jSeparator1.setForeground(new java.awt.Color(70, 70, 70));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        saveExitButton.setText("Save & Exit");
        saveExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveExitButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        imageLabel.setText("jLabel1");
        imageLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        imageLabel.setFocusable(false);

        idLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        idLabel.setText("ID");

        nameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameLabel.setText("Name");

        sizeTileLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sizeTileLabel.setText("Size of Tile");

        colliderLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        colliderLabel.setText("Collider");

        animationLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        animationLabel.setText("Animation Number");

        heightLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        heightLabel.setText("Height");

        widthLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        widthLabel.setText("Width");

        inputCLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        inputCLabel.setText("Input Component");

        javax.swing.GroupLayout tilePropertiesPaneLayout = new javax.swing.GroupLayout(tilePropertiesPane);
        tilePropertiesPane.setLayout(tilePropertiesPaneLayout);
        tilePropertiesPaneLayout.setHorizontalGroup(
            tilePropertiesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tilePropertiesPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tilePropertiesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idLabel)
                    .addComponent(nameLabel)
                    .addComponent(colliderLabel)
                    .addComponent(animationLabel)
                    .addComponent(sizeTileLabel)
                    .addGroup(tilePropertiesPaneLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(tilePropertiesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(heightLabel)
                            .addComponent(widthLabel)))
                    .addComponent(inputCLabel))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        tilePropertiesPaneLayout.setVerticalGroup(
            tilePropertiesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tilePropertiesPaneLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(idLabel)
                .addGap(37, 37, 37)
                .addComponent(nameLabel)
                .addGap(35, 35, 35)
                .addComponent(sizeTileLabel)
                .addGap(13, 13, 13)
                .addComponent(heightLabel)
                .addGap(18, 18, 18)
                .addComponent(widthLabel)
                .addGap(18, 18, 18)
                .addComponent(colliderLabel)
                .addGap(34, 34, 34)
                .addComponent(animationLabel)
                .addGap(31, 31, 31)
                .addComponent(inputCLabel)
                .addContainerGap(360, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(saveExitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 447, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tilePropertiesPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(66, Short.MAX_VALUE)
                    .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(350, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 705, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(saveExitButton))
                .addGap(19, 19, 19))
            .addComponent(tilePropertiesPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(88, Short.MAX_VALUE)
                    .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(147, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveExitButtonActionPerformed
        // TODO add your handling code here:
        
        System.exit(0);
    }//GEN-LAST:event_saveExitButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditorForm().setVisible(true);
            }
        });
    }
    
    public static EditorForm getInstance(){
        if (ef == null) {
            ef = new EditorForm();
            ef.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        }
        return ef;
    }
    
    public void initPresentation(String luaPath, String imgPath, int hght, int wdth) {
        this.luaPath = luaPath;
       // this.imagePath = imgPath;
        height = hght;
        width = wdth;
        bounds = imageLabel.getBounds();
        Icon icon = new ImageIcon(imagePath);
        imageLabel.setIcon(icon);
        grid = new GridPane();
        this.add(grid);
        grid.setBounds(bounds);
        ef.setVisible(true);
    }
    public class GridPane extends javax.swing.JLayeredPane {

        public GridPane() {
            setLayout(new GridBagLayout());
            
            int numRow = bounds.width/width;
            int numCol = bounds.height/height;

            GridBagConstraints gbc = new GridBagConstraints();
            for (int row = 0; row < numRow; row++) {
                for (int col = 0; col < numCol; col++) {
                    gbc.gridx = col;
                    gbc.gridy = row;

                    CellPane cellPane = new CellPane();
                    Border border = null;
                    cellPane.setPosition(row, col);
                    if (row < 4) {
                        if (col < 4) {
                            border = new MatteBorder(1, 1, 0, 1, Color.BLACK);
                        } else {
                            border = new MatteBorder(1, 1, 0, 1, Color.BLACK);
                        }
                    } else {
                        if (col < 4) {
                            border = new MatteBorder(1, 1, 1, 1, Color.BLACK);
                        } else {
                            border = new MatteBorder(1, 1, 1, 1, Color.BLACK);
                        }
                    }
                    cellPane.setBorder(border);
                    add(cellPane, gbc);
                }
            }
        }
    }

    public class CellPane extends javax.swing.JPanel {
        
        private int row;
        private int col;
        private Color over;
        private Color def;
        
        public CellPane() {
                def = this.getBackground();
                over = new Color(0,0,0,12);
            addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e){
                    System.out.println("he clicat"+row+col);
                }
                /* si es fa servir peta per tot arreu. TODO: revisar
                @Override
                public void mouseEntered(MouseEvent e) {
                    setBackground(over);
                }

                @Override
                public void mouseExited(MouseEvent e) {
                    setBackground(def);
                }*/
            });
        }

        @Override
        public Dimension getPreferredSize() {
            return new Dimension(width,height);
        }
        
        public void setPosition(int r, int c){
            row = r;
            col = c;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel animationLabel;
    private javax.swing.JLabel colliderLabel;
    private javax.swing.JLabel heightLabel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel inputCLabel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton saveExitButton;
    private javax.swing.JLabel sizeTileLabel;
    private javax.swing.JPanel tilePropertiesPane;
    private javax.swing.JLabel widthLabel;
    // End of variables declaration//GEN-END:variables
}
