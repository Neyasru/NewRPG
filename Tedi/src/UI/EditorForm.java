/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Rectangle;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.border.Border;
import javax.swing.border.MatteBorder;
import tedi.Parser;

/**
 *
 * @author Ferran
 */
public class EditorForm extends javax.swing.JFrame {

    private static EditorForm ef;
    private static String luaPath = "F://Ferran/SLDS/NewRPG/windows/MVS/ScriptRPG/assets/tiles/tilesp.lua";
    private static String imagePath = "F://Ferran/SLDS/NewRPG/windows/MVS/ScriptRPG/assets/images/tileset.png";
    private static String imgName = "img_tileset";
    private static GridPane grid;
    private static Rectangle bounds;
    private static int width;
    private static int height;
    private static Parser pars;
    public Vector<Info> info;
    
    public static class Info{
        public String name;
        public GraphicsComp gC;
        public TransformComp tC;
        public ColliderComp cC;        
        
        public class GraphicsComp{
            public String imageID;
            public int row,column,numAnim;
            public GraphicsComp(){
                imageID = "";
                row = column = numAnim = 0;
            }
        };
        public class TransformComp{
            public int w,h,x,y,scale;
            public TransformComp(){
                x=h=x=y=scale;
            }
        };
        public class ColliderComp{
            public String type;
            public ColliderComp(){
                type = "";
            }
        };
        public Info() {
            name = "";
            gC = new GraphicsComp();
            tC = new TransformComp();
            cC = new ColliderComp();
        }
                
    };
    /**
     * Creates new form EditorForm
     */
    public EditorForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        saveExitButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        imageLabel = new javax.swing.JLabel();
        tilePropertiesPane = new javax.swing.JPanel();
        heightLabel = new javax.swing.JLabel();
        widthLabel = new javax.swing.JLabel();
        idText = new javax.swing.JTextField();
        nameTextField = new javax.swing.JTextField();
        heightTextField = new javax.swing.JTextField();
        widthTextField = new javax.swing.JTextField();
        colliderComboBox = new javax.swing.JComboBox();
        idLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        sizeTileLabel = new javax.swing.JLabel();
        colliderLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSeparator1.setBackground(new java.awt.Color(70, 70, 70));
        jSeparator1.setForeground(new java.awt.Color(70, 70, 70));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        saveExitButton.setText("Save & Exit");
        saveExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveExitButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        imageLabel.setText("jLabel1");
        imageLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        imageLabel.setFocusable(false);

        javax.swing.GroupLayout tilePropertiesPaneLayout = new javax.swing.GroupLayout(tilePropertiesPane);
        tilePropertiesPane.setLayout(tilePropertiesPaneLayout);
        tilePropertiesPaneLayout.setHorizontalGroup(
            tilePropertiesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 205, Short.MAX_VALUE)
        );
        tilePropertiesPaneLayout.setVerticalGroup(
            tilePropertiesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 362, Short.MAX_VALUE)
        );

        heightLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        heightLabel.setText("Height");

        widthLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        widthLabel.setText("Width");

        idText.setEditable(false);
        idText.setText("-");

        nameTextField.setText("-");
        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });

        heightTextField.setText("32");

        widthTextField.setText("32");

        colliderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Solid" }));
        colliderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colliderComboBoxActionPerformed(evt);
            }
        });

        idLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        idLabel.setText("ID");

        nameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameLabel.setText("Name");

        sizeTileLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sizeTileLabel.setText("Size of Tile");

        colliderLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        colliderLabel.setText("Collider");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(saveExitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 461, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(tilePropertiesPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nameTextField)
                                .addContainerGap())
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(heightLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(heightTextField))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(widthLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(widthTextField))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(idLabel)
                                    .addGap(18, 18, 18)
                                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(sizeTileLabel, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(colliderLabel)
                                .addGap(18, 18, 18)
                                .addComponent(colliderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(66, Short.MAX_VALUE)
                    .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(350, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(saveExitButton))
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(sizeTileLabel)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(heightLabel)
                    .addComponent(heightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(widthLabel)
                    .addComponent(widthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(colliderLabel)
                    .addComponent(colliderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tilePropertiesPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(88, Short.MAX_VALUE)
                    .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(147, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveExitButtonActionPerformed
        // TODO add your handling code here:
        saveActual();
        pars.save(info);
        System.exit(0);
    }//GEN-LAST:event_saveExitButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        saveActual();
        pars.save(info);
    }//GEN-LAST:event_saveButtonActionPerformed

    private void colliderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colliderComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_colliderComboBoxActionPerformed

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditorForm().setVisible(true);
            }
        });
    }
    
    public static EditorForm getInstance(){
        if (ef == null) {
            ef = new EditorForm();
            ef.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        }
        return ef;
    }
    
    public void initPresentation(String luaPath, String imgPath, int hght, int wdth) {
        //this.luaPath = luaPath;
        //this.imagePath = imgPath;
        height = hght;
        width = wdth;
        bounds = imageLabel.getBounds();
        Icon icon = new ImageIcon(imagePath);
        imageLabel.setIcon(icon);
        grid = new GridPane();
        this.add(grid);
        grid.setBounds(bounds);
        ef.setVisible(true);
        info = newInfo();
        pars = Parser.getInstance(this.luaPath,info,grid.C,grid.R);
        changeInfo(0,0);
    }
    
    private Vector<Info> newInfo(){
        Vector<Info> out = new Vector<Info>();
        for (int i = 0; i < grid.R; i++){
            for (int j = 0; j < grid.C; j++){
                Info ninfo = new Info();
                ninfo.gC.row = i;
                ninfo.gC.column = j;
                ninfo.gC.imageID = imgName;
                ninfo.gC.numAnim = 0;
                ninfo.tC.x = ninfo.tC.y = 0;
                ninfo.tC.scale = 1;
                ninfo.tC.w = width;
                ninfo.tC.h = height;
                ninfo.cC.type = "None";
                out.add(ninfo);
            }
        }
        return out;
    }
    
    private void saveActual(){
        System.out.println("clicao");
        int id = Integer.parseInt(idText.getText());
        Info sinfo = info.get(id);
        sinfo.name = nameTextField.getText();
        sinfo.tC.w = Integer.parseInt(widthTextField.getText());
        sinfo.tC.h = Integer.parseInt(heightTextField.getText());
        sinfo.cC.type = String.valueOf(colliderComboBox.getSelectedItem());
        info.set(id, sinfo);
        pars.changeNames(id,sinfo.name);
    }
    
    private void changeInfo(int r,int c){
        int id = r * grid.R + c;
        idText.setText(""+id);
        Info ninfo = new Info();
        ninfo = info.get(id);
        System.out.println(ninfo.name);
        nameTextField.setText(ninfo.name);
        widthTextField.setText(""+ninfo.tC.w);
        heightTextField.setText(""+ninfo.tC.h);
        if(ninfo.cC.type == "Solid"){
            colliderComboBox.setSelectedIndex(1);
        }
        else {
            colliderComboBox.setSelectedIndex(0);
        }
    }
    
    public class GridPane extends javax.swing.JLayeredPane {
        public int R,C;
        public GridPane() {
            setLayout(new GridBagLayout());
            
            int numRow = bounds.width/width;
            int numCol = bounds.height/height;
            R = numRow;
            C = numCol;
            GridBagConstraints gbc = new GridBagConstraints();
            for (int row = 0; row < numRow; row++) {
                for (int col = 0; col < numCol; col++) {
                    gbc.gridx = col;
                    gbc.gridy = row;

                    CellPane cellPane = new CellPane();
                    Border border = null;
                    cellPane.setPosition(row, col);
                    if (row < 4) {
                        if (col < 4) {
                            border = new MatteBorder(1, 1, 0, 1, Color.BLACK);
                        } else {
                            border = new MatteBorder(1, 1, 0, 1, Color.BLACK);
                        }
                    } else {
                        if (col < 4) {
                            border = new MatteBorder(1, 1, 1, 1, Color.BLACK);
                        } else {
                            border = new MatteBorder(1, 1, 1, 1, Color.BLACK);
                        }
                    }
                    cellPane.setBorder(border);
                    add(cellPane, gbc);
                }
            }
        }
    }

    public class CellPane extends javax.swing.JPanel {
        
        private int row;
        private int col;
        private Color over;
        private Color def;
        
        public CellPane() {
                def = this.getBackground();
                over = new Color(0,0,0,12);
            addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e){
                    saveActual();
                    System.out.println("he clicat"+row+col);
                    changeInfo(row,col);
                }
                /* si es fa servir peta per tot arreu. TODO: revisar
                @Override
                public void mouseEntered(MouseEvent e) {
                    setBackground(over);
                }

                @Override
                public void mouseExited(MouseEvent e) {
                    setBackground(def);
                }*/
            });
        }

        @Override
        public Dimension getPreferredSize() {
            return new Dimension(width,height);
        }
        
        public void setPosition(int r, int c){
            row = r;
            col = c;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox colliderComboBox;
    private javax.swing.JLabel colliderLabel;
    private javax.swing.JLabel heightLabel;
    private javax.swing.JTextField heightTextField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idText;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton saveExitButton;
    private javax.swing.JLabel sizeTileLabel;
    private javax.swing.JPanel tilePropertiesPane;
    private javax.swing.JLabel widthLabel;
    private javax.swing.JTextField widthTextField;
    // End of variables declaration//GEN-END:variables
}
